swagger: '2.0'
info:
  description: Набор сервисов для учета на предприятии
  version: "1.0.0"
  title: RestApi

produces:
  - application/json
  - application/xml
  - application/text

basePath: "/api"

paths:
  /reports/formats:
    get:
      summary: Получить список форматов для отчетов
      operationId: main.formats
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              type: object
              properties:
                name:
                  type: string
                value:
                  type: string
        500:
          description: Ошибка на сервере
        default:
          description: Неизвестная ошибка 

  /reports/{category}/{format_type}:
    get:
      summary: Получить отчет по указанной категории и формату
      operationId: main.get_report
      parameters:
        - name: category
          in: path
          required: true
          type: string
          description: Категория данных для отчета (ranges, groups, nomenclature, receipts)
        - name: format_type
          in: path
          required: true
          type: string
          description: Формат отчета (CSV, MD, JSON, XML, DOCX, XLSX)
      responses:
        200:
          description: Успешная генерация отчета
          schema:
            type: string
        400:
          description: Неверные параметры
        500:
          description: Ошибка на сервере
        default:
          description: Неизвестная ошибка
  /filter/{category}:
    post:
      summary: Фильтрация данных по категории
      operationId: main.filter_data
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: category
          in: path
          required: true
          type: string
          description: Категория данных для фильтрации (ranges, groups, nomenclature, receipts)
        - in: body
          name: filter
          description: "JSON-словарь для фильтрации данных"
          required: true
          schema:
            $ref: '#/definitions/Filter'
      responses:
        200:
          description: Успешная фильтрация данных
          schema:
            type: string
        400:
          description: Неверные параметры
        500:
          description: Ошибка на сервере

  /transactions:
    post:
      summary: Получить список транзакций
      operationId: main.transactions
      produces:
        - application/json
      responses:
        200:
          description: Список транзакций успешно получен
          schema:
            type: object
        404:
          description: Транзакции не найдены
        500:
          description: Ошибка на сервере

  /turnover:
    post:
      summary: Получить отчет по обороту
      operationId: main.turnover
      produces:
        - application/json
      responses:
        200:
          description: Отчет по обороту успешно создан
          schema:
            type: object
        404:
          description: Обороты не найдены
        500:
          description: Ошибка на сервере
  
  /dateblock:
    post:
      summary: Расчитать оборот с датой блокировки
      operationId: main.dateblock
      produces:
        - application/json
      responses:
        200:
          description: Дата блока успешно обновлена
          schema:
            type: object
        404:
          description: Транзакции не найдены
        500:
          description: Ошибка на сервере

  /get_dateblock:
    get:
      summary: Получить дату блокировки
      operationId: main.get_dateblock
      produces:
        - application/json
      responses:
        200:
          description: Блокировка дат успешно получена
          schema:
            type: object
            properties:
              message:
                type: array
                items:
                  type: string
        404:
          description: Файл блокировки дат не найден
        500:
          description: Ошибка на сервере

definitions:
  Filter:
    type: object
    properties:
      name:
        type: string
        description: "Имя фильтра"
      id:
        type: string
        description: "ID фильтра"
      type:
        type: integer
        enum:
          - 1  # EQUALS
          - 2  # LIKE
        description: "Тип фильтра: 1 для EQUALS, 2 для LIKE"
    required:
      - name
      - id
      - type
    example:
      name: "example_name"
      id: ""
      type: 1